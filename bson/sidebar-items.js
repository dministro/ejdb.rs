initSidebarItems({"enum":[["Bson","Possible BSON value types."],["DecoderError","Possible errors that can arise during decoding."],["EncoderError","Possible errors that can arise during encoding."]],"fn":[["decode_document","Attempt to decode a `Document` from a byte stream."],["decode_document_utf8_lossy","Attempt to decode a `Document` that may contain invalid UTF-8 strings from a byte stream."],["encode_document","Attempt to encode a `Document` into a byte stream."],["from_bson","Decode a BSON `Value` into a `T` Deserializable."],["to_bson","Encode a `T` Serializable into a BSON `Value`."]],"macro":[["bson","Construct a bson::BSON value from a literal."],["doc","Construct a bson::Document value."]],"mod":[["compat","Backward compatibility"],["macros",""],["oid","ObjectId"],["ordered","A BSON document represented as an associative HashMap with insertion ordering."],["spec","Constants derived from the BSON Specification Version 1.0."]],"struct":[["Decoder","Serde Decoder"],["Encoder","Serde Encoder"],["TimeStamp","`TimeStamp` representation in struct for serde serialization"],["UtcDateTime","`DateTime` representation in struct for serde serialization"]],"type":[["Array","Alias for `Vec<Bson>`."],["DecoderResult","Alias for `Result<T, DecoderError>`."],["Document","Alias for `OrderedDocument`."],["EncoderResult","Alias for `Result<T, EncoderError>`."]]});